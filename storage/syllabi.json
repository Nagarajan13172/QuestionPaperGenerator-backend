{
  "syl_7337faa9": {
    "id": "syl_7337faa9",
    "course_name": "Data Structure",
    "content": " 25 CS3351 DATA STRUCTURES L T P C 3 0 0 3 COURSE OBJECTIVES:  To understand the concepts of ADTs.  To Learn linear data structures – lists, stacks, and queues.  To understand non-linear data structures – trees and graphs.  To understand sorting, searching and hashing algorithms.  To apply Tree and Graph structures. UNIT I LISTS 9 Abstract Data Types (ADTs) – List ADT – Array-based implementation – Linked list implementation – Singly linked lists – Circularly linked lists – Doubly-linked lists – Applications of lists – Polynomial ADT – Radix Sort – Multilists. UNIT II STACKS AND QUEUES 9 Stack ADT – Operations – Applications – Balancing Symbols – Evaluating arithmetic expressions- Infix to Postfix conversion – Function Calls – Queue ADT – Operations – Circular Queue – DeQueue – Applications of Queues. UNIT III TREES 9 Tree ADT – Tree Traversals – Binary Tree ADT – Expression trees – Binary Search Tree ADT – AVL Trees – Priority Queue (Heaps) – Binary Heap. UNIT IV MULTIWAY SEARCH TREES AND GRAPHS 9 B-Tree – B+ Tree – Graph Definition – Representation of Graphs – Types of Graph – Breadth-first traversal – Depth-first traversal –– Bi-connectivity – Euler circuits – Topological Sort – Dijkstra's algorithm – Minimum Spanning Tree – Prim's algorithm – Kruskal's algorithm UNIT V SEARCHING, SORTING AND HASHING TECHNIQUES 9 Searching – Linear Search – Binary Search. Sorting – Bubble sort – Selection sort – Insertion sort – Shell sort –. Merge Sort – Hashing – Hash Functions – Separate Chaining – Open Addressing – Rehashing – Extendible Hashing. COURSE OUTCOMES: At the end of this course, the students will be able to: CO1: Define linear and non-linear data structures. CO2: Implement linear and non–linear data structure operations. CO3: Use appropriate linear/non–linear data structure operations for solving a given problem. CO4: Apply appropriate graph algorithms for graph applications. CO5: Analyze the various searching and sorting algorithms. TOTAL:45 PERIODS TEXT BOOKS 1. Mark Allen Weiss, Data Structures and Algorithm Analysis in C, 2nd Edition, Pearson Education, 2005. 2. Kamthane, Introduction to Data Structures in C, 1st Edition, Pearson Education, 2007 EnggTree.com Downloaded from EnggTree.com ",
    "units": [
      {
        "id": "unit_1",
        "title": "LISTS",
        "topics": [
          "Abstract Data Types (ADTs)",
          "Array-based implementation",
          "Linked list implementation",
          "Singly linked lists",
          "Circularly linked lists",
          "Doubly-linked lists",
          "Applications of lists",
          "Polynomial ADT",
          "Multilists."
        ],
        "order": 1
      },
      {
        "id": "unit_2",
        "title": "STACKS AND QUEUES",
        "topics": [
          "Applications",
          "Balancing Symbols",
          "Evaluating arithmetic expressions- Infix to Postfix conversion",
          "Function Calls",
          "Circular Queue",
          "Applications of Queues."
        ],
        "order": 2
      },
      {
        "id": "unit_3",
        "title": "TREES",
        "topics": [
          "Tree Traversals",
          "Binary Tree ADT",
          "Expression trees",
          "Binary Search Tree ADT",
          "Priority Queue (Heaps)",
          "Binary Heap."
        ],
        "order": 3
      },
      {
        "id": "unit_4",
        "title": "MULTIWAY SEARCH TREES AND GRAPHS",
        "topics": [
          "Graph Definition",
          "Representation of Graphs",
          "Types of Graph",
          "Breadth-first traversal",
          "Depth-first traversal",
          "Bi-connectivity",
          "Euler circuits",
          "Topological Sort",
          "Dijkstra's algorithm",
          "Minimum Spanning Tree",
          "Prim's algorithm",
          "Kruskal's algorithm"
        ],
        "order": 4
      },
      {
        "id": "unit_5",
        "title": "SEARCHING, SORTING AND HASHING TECHNIQUES",
        "topics": [
          "Linear Search",
          "Binary Search. Sorting",
          "Bubble sort",
          "Selection sort",
          "Insertion sort",
          ". Merge Sort",
          "Hash Functions",
          "Separate Chaining",
          "Open Addressing",
          "Extendible Hashing. COURSE OUTCOMES: At the end of this course, the students will be able to: CO1: Define linear and non-linear data structures. CO2: Implement linear and non",
          "linear data structure operations. CO3: Use appropriate linear/non"
        ],
        "order": 5
      }
    ],
    "created_at": "2025-10-17 18:04:00.223981",
    "updated_at": "2025-10-17 18:04:00.223986"
  },
  "syl_a274b1db": {
    "id": "syl_a274b1db",
    "course_name": "Soft SKill",
    "content": " 25 CS3351 DATA STRUCTURES L T P C 3 0 0 3 COURSE OBJECTIVES:  To understand the concepts of ADTs.  To Learn linear data structures – lists, stacks, and queues.  To understand non-linear data structures – trees and graphs.  To understand sorting, searching and hashing algorithms.  To apply Tree and Graph structures. UNIT I LISTS 9 Abstract Data Types (ADTs) – List ADT – Array-based implementation – Linked list implementation – Singly linked lists – Circularly linked lists – Doubly-linked lists – Applications of lists – Polynomial ADT – Radix Sort – Multilists. UNIT II STACKS AND QUEUES 9 Stack ADT – Operations – Applications – Balancing Symbols – Evaluating arithmetic expressions- Infix to Postfix conversion – Function Calls – Queue ADT – Operations – Circular Queue – DeQueue – Applications of Queues. UNIT III TREES 9 Tree ADT – Tree Traversals – Binary Tree ADT – Expression trees – Binary Search Tree ADT – AVL Trees – Priority Queue (Heaps) – Binary Heap. UNIT IV MULTIWAY SEARCH TREES AND GRAPHS 9 B-Tree – B+ Tree – Graph Definition – Representation of Graphs – Types of Graph – Breadth-first traversal – Depth-first traversal –– Bi-connectivity – Euler circuits – Topological Sort – Dijkstra's algorithm – Minimum Spanning Tree – Prim's algorithm – Kruskal's algorithm UNIT V SEARCHING, SORTING AND HASHING TECHNIQUES 9 Searching – Linear Search – Binary Search. Sorting – Bubble sort – Selection sort – Insertion sort – Shell sort –. Merge Sort – Hashing – Hash Functions – Separate Chaining – Open Addressing – Rehashing – Extendible Hashing. COURSE OUTCOMES: At the end of this course, the students will be able to: CO1: Define linear and non-linear data structures. CO2: Implement linear and non–linear data structure operations. CO3: Use appropriate linear/non–linear data structure operations for solving a given problem. CO4: Apply appropriate graph algorithms for graph applications. CO5: Analyze the various searching and sorting algorithms. TOTAL:45 PERIODS TEXT BOOKS 1. Mark Allen Weiss, Data Structures and Algorithm Analysis in C, 2nd Edition, Pearson Education, 2005. 2. Kamthane, Introduction to Data Structures in C, 1st Edition, Pearson Education, 2007 EnggTree.com Downloaded from EnggTree.com ",
    "units": [
      {
        "id": "unit_1",
        "title": "LISTS",
        "topics": [
          "Abstract Data Types (ADTs)",
          "Array-based implementation",
          "Linked list implementation",
          "Singly linked lists",
          "Circularly linked lists",
          "Doubly-linked lists",
          "Applications of lists",
          "Polynomial ADT",
          "Multilists."
        ],
        "order": 1
      },
      {
        "id": "unit_2",
        "title": "STACKS AND QUEUES",
        "topics": [
          "Applications",
          "Balancing Symbols",
          "Evaluating arithmetic expressions- Infix to Postfix conversion",
          "Function Calls",
          "Circular Queue",
          "Applications of Queues."
        ],
        "order": 2
      },
      {
        "id": "unit_3",
        "title": "TREES",
        "topics": [
          "Tree Traversals",
          "Binary Tree ADT",
          "Expression trees",
          "Binary Search Tree ADT",
          "Priority Queue (Heaps)",
          "Binary Heap."
        ],
        "order": 3
      },
      {
        "id": "unit_4",
        "title": "MULTIWAY SEARCH TREES AND GRAPHS",
        "topics": [
          "Graph Definition",
          "Representation of Graphs",
          "Types of Graph",
          "Breadth-first traversal",
          "Depth-first traversal",
          "Bi-connectivity",
          "Euler circuits",
          "Topological Sort",
          "Dijkstra's algorithm",
          "Minimum Spanning Tree",
          "Prim's algorithm",
          "Kruskal's algorithm"
        ],
        "order": 4
      },
      {
        "id": "unit_5",
        "title": "SEARCHING, SORTING AND HASHING TECHNIQUES",
        "topics": [
          "Linear Search",
          "Binary Search. Sorting",
          "Bubble sort",
          "Selection sort",
          "Insertion sort",
          ". Merge Sort",
          "Hash Functions",
          "Separate Chaining",
          "Open Addressing",
          "Extendible Hashing. COURSE OUTCOMES: At the end of this course, the students will be able to: CO1: Define linear and non-linear data structures. CO2: Implement linear and non",
          "linear data structure operations. CO3: Use appropriate linear/non"
        ],
        "order": 5
      }
    ],
    "created_at": "2025-10-18 03:59:52.938610",
    "updated_at": "2025-10-18 03:59:52.938616"
  },
  "syl_41904c8b": {
    "id": "syl_41904c8b",
    "course_name": "Computer Vision",
    "content": " 25 CS3351 DATA STRUCTURES L T P C 3 0 0 3 COURSE OBJECTIVES:  To understand the concepts of ADTs.  To Learn linear data structures – lists, stacks, and queues.  To understand non-linear data structures – trees and graphs.  To understand sorting, searching and hashing algorithms.  To apply Tree and Graph structures. UNIT I LISTS 9 Abstract Data Types (ADTs) – List ADT – Array-based implementation – Linked list implementation – Singly linked lists – Circularly linked lists – Doubly-linked lists – Applications of lists – Polynomial ADT – Radix Sort – Multilists. UNIT II STACKS AND QUEUES 9 Stack ADT – Operations – Applications – Balancing Symbols – Evaluating arithmetic expressions- Infix to Postfix conversion – Function Calls – Queue ADT – Operations – Circular Queue – DeQueue – Applications of Queues. UNIT III TREES 9 Tree ADT – Tree Traversals – Binary Tree ADT – Expression trees – Binary Search Tree ADT – AVL Trees – Priority Queue (Heaps) – Binary Heap. UNIT IV MULTIWAY SEARCH TREES AND GRAPHS 9 B-Tree – B+ Tree – Graph Definition – Representation of Graphs – Types of Graph – Breadth-first traversal – Depth-first traversal –– Bi-connectivity – Euler circuits – Topological Sort – Dijkstra's algorithm – Minimum Spanning Tree – Prim's algorithm – Kruskal's algorithm UNIT V SEARCHING, SORTING AND HASHING TECHNIQUES 9 Searching – Linear Search – Binary Search. Sorting – Bubble sort – Selection sort – Insertion sort – Shell sort –. Merge Sort – Hashing – Hash Functions – Separate Chaining – Open Addressing – Rehashing – Extendible Hashing. COURSE OUTCOMES: At the end of this course, the students will be able to: CO1: Define linear and non-linear data structures. CO2: Implement linear and non–linear data structure operations. CO3: Use appropriate linear/non–linear data structure operations for solving a given problem. CO4: Apply appropriate graph algorithms for graph applications. CO5: Analyze the various searching and sorting algorithms. TOTAL:45 PERIODS TEXT BOOKS 1. Mark Allen Weiss, Data Structures and Algorithm Analysis in C, 2nd Edition, Pearson Education, 2005. 2. Kamthane, Introduction to Data Structures in C, 1st Edition, Pearson Education, 2007 EnggTree.com Downloaded from EnggTree.com ",
    "units": [
      {
        "id": "unit_1",
        "title": "LISTS",
        "topics": [
          "Abstract Data Types (ADTs)",
          "Array-based implementation",
          "Linked list implementation",
          "Singly linked lists",
          "Circularly linked lists",
          "Doubly-linked lists",
          "Applications of lists",
          "Polynomial ADT",
          "Multilists."
        ],
        "order": 1
      },
      {
        "id": "unit_2",
        "title": "STACKS AND QUEUES",
        "topics": [
          "Applications",
          "Balancing Symbols",
          "Evaluating arithmetic expressions- Infix to Postfix conversion",
          "Function Calls",
          "Circular Queue",
          "Applications of Queues."
        ],
        "order": 2
      },
      {
        "id": "unit_3",
        "title": "TREES",
        "topics": [
          "Tree Traversals",
          "Binary Tree ADT",
          "Expression trees",
          "Binary Search Tree ADT",
          "Priority Queue (Heaps)",
          "Binary Heap."
        ],
        "order": 3
      },
      {
        "id": "unit_4",
        "title": "MULTIWAY SEARCH TREES AND GRAPHS",
        "topics": [
          "Graph Definition",
          "Representation of Graphs",
          "Types of Graph",
          "Breadth-first traversal",
          "Depth-first traversal",
          "Bi-connectivity",
          "Euler circuits",
          "Topological Sort",
          "Dijkstra's algorithm",
          "Minimum Spanning Tree",
          "Prim's algorithm",
          "Kruskal's algorithm"
        ],
        "order": 4
      },
      {
        "id": "unit_5",
        "title": "SEARCHING, SORTING AND HASHING TECHNIQUES",
        "topics": [
          "Linear Search",
          "Binary Search. Sorting",
          "Bubble sort",
          "Selection sort",
          "Insertion sort",
          ". Merge Sort",
          "Hash Functions",
          "Separate Chaining",
          "Open Addressing",
          "Extendible Hashing. COURSE OUTCOMES: At the end of this course, the students will be able to: CO1: Define linear and non-linear data structures. CO2: Implement linear and non",
          "linear data structure operations. CO3: Use appropriate linear/non"
        ],
        "order": 5
      }
    ],
    "created_at": "2025-10-22 06:41:40.322473",
    "updated_at": "2025-10-22 06:41:40.322478"
  },
  "syl_f8aa0b80": {
    "id": "syl_f8aa0b80",
    "course_name": "Maths",
    "content": " 25 CS3351 DATA STRUCTURES L T P C 3 0 0 3 COURSE OBJECTIVES:  To understand the concepts of ADTs.  To Learn linear data structures – lists, stacks, and queues.  To understand non-linear data structures – trees and graphs.  To understand sorting, searching and hashing algorithms.  To apply Tree and Graph structures. UNIT I LISTS 9 Abstract Data Types (ADTs) – List ADT – Array-based implementation – Linked list implementation – Singly linked lists – Circularly linked lists – Doubly-linked lists – Applications of lists – Polynomial ADT – Radix Sort – Multilists. UNIT II STACKS AND QUEUES 9 Stack ADT – Operations – Applications – Balancing Symbols – Evaluating arithmetic expressions- Infix to Postfix conversion – Function Calls – Queue ADT – Operations – Circular Queue – DeQueue – Applications of Queues. UNIT III TREES 9 Tree ADT – Tree Traversals – Binary Tree ADT – Expression trees – Binary Search Tree ADT – AVL Trees – Priority Queue (Heaps) – Binary Heap. UNIT IV MULTIWAY SEARCH TREES AND GRAPHS 9 B-Tree – B+ Tree – Graph Definition – Representation of Graphs – Types of Graph – Breadth-first traversal – Depth-first traversal –– Bi-connectivity – Euler circuits – Topological Sort – Dijkstra's algorithm – Minimum Spanning Tree – Prim's algorithm – Kruskal's algorithm UNIT V SEARCHING, SORTING AND HASHING TECHNIQUES 9 Searching – Linear Search – Binary Search. Sorting – Bubble sort – Selection sort – Insertion sort – Shell sort –. Merge Sort – Hashing – Hash Functions – Separate Chaining – Open Addressing – Rehashing – Extendible Hashing. COURSE OUTCOMES: At the end of this course, the students will be able to: CO1: Define linear and non-linear data structures. CO2: Implement linear and non–linear data structure operations. CO3: Use appropriate linear/non–linear data structure operations for solving a given problem. CO4: Apply appropriate graph algorithms for graph applications. CO5: Analyze the various searching and sorting algorithms. TOTAL:45 PERIODS TEXT BOOKS 1. Mark Allen Weiss, Data Structures and Algorithm Analysis in C, 2nd Edition, Pearson Education, 2005. 2. Kamthane, Introduction to Data Structures in C, 1st Edition, Pearson Education, 2007 EnggTree.com Downloaded from EnggTree.com ",
    "units": [
      {
        "id": "unit_1",
        "title": "LISTS",
        "topics": [
          "Abstract Data Types (ADTs)",
          "Array-based implementation",
          "Linked list implementation",
          "Singly linked lists",
          "Circularly linked lists",
          "Doubly-linked lists",
          "Applications of lists",
          "Polynomial ADT",
          "Multilists."
        ],
        "order": 1
      },
      {
        "id": "unit_2",
        "title": "STACKS AND QUEUES",
        "topics": [
          "Applications",
          "Balancing Symbols",
          "Evaluating arithmetic expressions- Infix to Postfix conversion",
          "Function Calls",
          "Circular Queue",
          "Applications of Queues."
        ],
        "order": 2
      },
      {
        "id": "unit_3",
        "title": "TREES",
        "topics": [
          "Tree Traversals",
          "Binary Tree ADT",
          "Expression trees",
          "Binary Search Tree ADT",
          "Priority Queue (Heaps)",
          "Binary Heap."
        ],
        "order": 3
      },
      {
        "id": "unit_4",
        "title": "MULTIWAY SEARCH TREES AND GRAPHS",
        "topics": [
          "Graph Definition",
          "Representation of Graphs",
          "Types of Graph",
          "Breadth-first traversal",
          "Depth-first traversal",
          "Bi-connectivity",
          "Euler circuits",
          "Topological Sort",
          "Dijkstra's algorithm",
          "Minimum Spanning Tree",
          "Prim's algorithm",
          "Kruskal's algorithm"
        ],
        "order": 4
      },
      {
        "id": "unit_5",
        "title": "SEARCHING, SORTING AND HASHING TECHNIQUES",
        "topics": [
          "Linear Search",
          "Binary Search. Sorting",
          "Bubble sort",
          "Selection sort",
          "Insertion sort",
          ". Merge Sort",
          "Hash Functions",
          "Separate Chaining",
          "Open Addressing",
          "Extendible Hashing. COURSE OUTCOMES: At the end of this course, the students will be able to: CO1: Define linear and non-linear data structures. CO2: Implement linear and non",
          "linear data structure operations. CO3: Use appropriate linear/non"
        ],
        "order": 5
      }
    ],
    "created_at": "2025-10-22 06:45:18.652091",
    "updated_at": "2025-10-22 06:45:18.652097"
  },
  "syl_6f2ee6f2": {
    "id": "syl_6f2ee6f2",
    "course_name": "Demo",
    "content": " 25 CS3351 DATA STRUCTURES L T P C 3 0 0 3 COURSE OBJECTIVES:  To understand the concepts of ADTs.  To Learn linear data structures – lists, stacks, and queues.  To understand non-linear data structures – trees and graphs.  To understand sorting, searching and hashing algorithms.  To apply Tree and Graph structures. UNIT I LISTS 9 Abstract Data Types (ADTs) – List ADT – Array-based implementation – Linked list implementation – Singly linked lists – Circularly linked lists – Doubly-linked lists – Applications of lists – Polynomial ADT – Radix Sort – Multilists. UNIT II STACKS AND QUEUES 9 Stack ADT – Operations – Applications – Balancing Symbols – Evaluating arithmetic expressions- Infix to Postfix conversion – Function Calls – Queue ADT – Operations – Circular Queue – DeQueue – Applications of Queues. UNIT III TREES 9 Tree ADT – Tree Traversals – Binary Tree ADT – Expression trees – Binary Search Tree ADT – AVL Trees – Priority Queue (Heaps) – Binary Heap. UNIT IV MULTIWAY SEARCH TREES AND GRAPHS 9 B-Tree – B+ Tree – Graph Definition – Representation of Graphs – Types of Graph – Breadth-first traversal – Depth-first traversal –– Bi-connectivity – Euler circuits – Topological Sort – Dijkstra's algorithm – Minimum Spanning Tree – Prim's algorithm – Kruskal's algorithm UNIT V SEARCHING, SORTING AND HASHING TECHNIQUES 9 Searching – Linear Search – Binary Search. Sorting – Bubble sort – Selection sort – Insertion sort – Shell sort –. Merge Sort – Hashing – Hash Functions – Separate Chaining – Open Addressing – Rehashing – Extendible Hashing. COURSE OUTCOMES: At the end of this course, the students will be able to: CO1: Define linear and non-linear data structures. CO2: Implement linear and non–linear data structure operations. CO3: Use appropriate linear/non–linear data structure operations for solving a given problem. CO4: Apply appropriate graph algorithms for graph applications. CO5: Analyze the various searching and sorting algorithms. TOTAL:45 PERIODS TEXT BOOKS 1. Mark Allen Weiss, Data Structures and Algorithm Analysis in C, 2nd Edition, Pearson Education, 2005. 2. Kamthane, Introduction to Data Structures in C, 1st Edition, Pearson Education, 2007 EnggTree.com Downloaded from EnggTree.com ",
    "units": [
      {
        "id": "unit_1",
        "title": "LISTS",
        "topics": [
          "Abstract Data Types (ADTs)",
          "Array-based implementation",
          "Linked list implementation",
          "Singly linked lists",
          "Circularly linked lists",
          "Doubly-linked lists",
          "Applications of lists",
          "Polynomial ADT",
          "Multilists."
        ],
        "order": 1
      },
      {
        "id": "unit_2",
        "title": "STACKS AND QUEUES",
        "topics": [
          "Applications",
          "Balancing Symbols",
          "Evaluating arithmetic expressions- Infix to Postfix conversion",
          "Function Calls",
          "Circular Queue",
          "Applications of Queues."
        ],
        "order": 2
      },
      {
        "id": "unit_3",
        "title": "TREES",
        "topics": [
          "Tree Traversals",
          "Binary Tree ADT",
          "Expression trees",
          "Binary Search Tree ADT",
          "Priority Queue (Heaps)",
          "Binary Heap."
        ],
        "order": 3
      },
      {
        "id": "unit_4",
        "title": "MULTIWAY SEARCH TREES AND GRAPHS",
        "topics": [
          "Graph Definition",
          "Representation of Graphs",
          "Types of Graph",
          "Breadth-first traversal",
          "Depth-first traversal",
          "Bi-connectivity",
          "Euler circuits",
          "Topological Sort",
          "Dijkstra's algorithm",
          "Minimum Spanning Tree",
          "Prim's algorithm",
          "Kruskal's algorithm"
        ],
        "order": 4
      },
      {
        "id": "unit_5",
        "title": "SEARCHING, SORTING AND HASHING TECHNIQUES",
        "topics": [
          "Linear Search",
          "Binary Search. Sorting",
          "Bubble sort",
          "Selection sort",
          "Insertion sort",
          ". Merge Sort",
          "Hash Functions",
          "Separate Chaining",
          "Open Addressing",
          "Extendible Hashing. COURSE OUTCOMES: At the end of this course, the students will be able to: CO1: Define linear and non-linear data structures. CO2: Implement linear and non",
          "linear data structure operations. CO3: Use appropriate linear/non"
        ],
        "order": 5
      }
    ],
    "created_at": "2025-10-22 08:47:52.305782",
    "updated_at": "2025-10-22 08:47:52.305787"
  },
  "syl_2df95455": {
    "id": "syl_2df95455",
    "course_name": "testtttt",
    "content": " 25 CS3351 DATA STRUCTURES L T P C 3 0 0 3 COURSE OBJECTIVES:  To understand the concepts of ADTs.  To Learn linear data structures – lists, stacks, and queues.  To understand non-linear data structures – trees and graphs.  To understand sorting, searching and hashing algorithms.  To apply Tree and Graph structures. UNIT I LISTS 9 Abstract Data Types (ADTs) – List ADT – Array-based implementation – Linked list implementation – Singly linked lists – Circularly linked lists – Doubly-linked lists – Applications of lists – Polynomial ADT – Radix Sort – Multilists. UNIT II STACKS AND QUEUES 9 Stack ADT – Operations – Applications – Balancing Symbols – Evaluating arithmetic expressions- Infix to Postfix conversion – Function Calls – Queue ADT – Operations – Circular Queue – DeQueue – Applications of Queues. UNIT III TREES 9 Tree ADT – Tree Traversals – Binary Tree ADT – Expression trees – Binary Search Tree ADT – AVL Trees – Priority Queue (Heaps) – Binary Heap. UNIT IV MULTIWAY SEARCH TREES AND GRAPHS 9 B-Tree – B+ Tree – Graph Definition – Representation of Graphs – Types of Graph – Breadth-first traversal – Depth-first traversal –– Bi-connectivity – Euler circuits – Topological Sort – Dijkstra's algorithm – Minimum Spanning Tree – Prim's algorithm – Kruskal's algorithm UNIT V SEARCHING, SORTING AND HASHING TECHNIQUES 9 Searching – Linear Search – Binary Search. Sorting – Bubble sort – Selection sort – Insertion sort – Shell sort –. Merge Sort – Hashing – Hash Functions – Separate Chaining – Open Addressing – Rehashing – Extendible Hashing. COURSE OUTCOMES: At the end of this course, the students will be able to: CO1: Define linear and non-linear data structures. CO2: Implement linear and non–linear data structure operations. CO3: Use appropriate linear/non–linear data structure operations for solving a given problem. CO4: Apply appropriate graph algorithms for graph applications. CO5: Analyze the various searching and sorting algorithms. TOTAL:45 PERIODS TEXT BOOKS 1. Mark Allen Weiss, Data Structures and Algorithm Analysis in C, 2nd Edition, Pearson Education, 2005. 2. Kamthane, Introduction to Data Structures in C, 1st Edition, Pearson Education, 2007 EnggTree.com Downloaded from EnggTree.com ",
    "units": [
      {
        "id": "unit_1",
        "title": "LISTS",
        "topics": [
          "Abstract Data Types (ADTs)",
          "Array-based implementation",
          "Linked list implementation",
          "Singly linked lists",
          "Circularly linked lists",
          "Doubly-linked lists",
          "Applications of lists",
          "Polynomial ADT",
          "Multilists."
        ],
        "order": 1
      },
      {
        "id": "unit_2",
        "title": "STACKS AND QUEUES",
        "topics": [
          "Applications",
          "Balancing Symbols",
          "Evaluating arithmetic expressions- Infix to Postfix conversion",
          "Function Calls",
          "Circular Queue",
          "Applications of Queues."
        ],
        "order": 2
      },
      {
        "id": "unit_3",
        "title": "TREES",
        "topics": [
          "Tree Traversals",
          "Binary Tree ADT",
          "Expression trees",
          "Binary Search Tree ADT",
          "Priority Queue (Heaps)",
          "Binary Heap."
        ],
        "order": 3
      },
      {
        "id": "unit_4",
        "title": "MULTIWAY SEARCH TREES AND GRAPHS",
        "topics": [
          "Graph Definition",
          "Representation of Graphs",
          "Types of Graph",
          "Breadth-first traversal",
          "Depth-first traversal",
          "Bi-connectivity",
          "Euler circuits",
          "Topological Sort",
          "Dijkstra's algorithm",
          "Minimum Spanning Tree",
          "Prim's algorithm",
          "Kruskal's algorithm"
        ],
        "order": 4
      },
      {
        "id": "unit_5",
        "title": "SEARCHING, SORTING AND HASHING TECHNIQUES",
        "topics": [
          "Linear Search",
          "Binary Search. Sorting",
          "Bubble sort",
          "Selection sort",
          "Insertion sort",
          ". Merge Sort",
          "Hash Functions",
          "Separate Chaining",
          "Open Addressing",
          "Extendible Hashing. COURSE OUTCOMES: At the end of this course, the students will be able to: CO1: Define linear and non-linear data structures. CO2: Implement linear and non",
          "linear data structure operations. CO3: Use appropriate linear/non"
        ],
        "order": 5
      }
    ],
    "created_at": "2025-10-23 06:46:11.924870",
    "updated_at": "2025-10-23 06:46:11.924894"
  }
}